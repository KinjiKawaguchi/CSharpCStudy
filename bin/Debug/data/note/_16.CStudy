【前処理系とは何かを知ろう】

C言語で書いたプログラムには、まず字面の書き換えが施される。

これを「前処理」といい、これを行うシステムを「前処理系（プリプロセッサ）」という。

ここで施された結果のプログラムがコンパイラによって精査され、機械語に翻訳される。

C言語での前処理は「#」で始まる行によって指令されている。

この行を「前処理指令（ディレクティブ）」という。

前処理は、プログラムの先頭から末尾に向かって行単位に行われている。


【書き換える前処理を覚えよう】

単純な#define指令は、指定された名前を字句の列に置き換えることを指示する。

#define 名前 字句の列

この名前がプログラムに現れたら字句の列に書き換えよ、という指令である。

字句の列は、行末までに書かれているものすべてを意味する。

#define指令に指定された名前を「マクロ名」という。

#undefは、#defineの効力を無効にすることができる。

それまで使っていたマクロ名が無効化され、改めて#defineで定義し直すこともできる。


【部分的なプログラムの切り替えを覚えよう】

書いたプログラムを修正しているとき、プログラム中に変数の値を表示する文を入れることがある。

これは、途中の状況をみえるようにするためである。

つまり、プログラムのあちこちにこのためのprintfを埋め込み、修正後に取り除くことになる。

だが、取り除いたら変な症状が現れて、再び修正を行うこともある。

そのたびにまたprintfを埋め込まないといけない。

このような時に、printfを取り除かず、修正時のみ使うようにできると便利だ。

そのような時に用いるのが#ifdef指令である。

#ifdefは、そのマクロ名が#defineされてる間に#ifdef〜#endifで挟まれた部分をプログラムにする。

そうすることで、修正時は#define指令を使って挟まれた部分のプログラムを実行できる。

修正が終わったら#define指令の行だけ取り除けば、挟まれた部分のプログラムは実行されない。

#ifdefを使うことで、修正用の命令を残したまま、実際にプログラムの一部分にするかどうか指定できる。